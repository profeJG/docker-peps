# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

networks:
    ds-my-javascript-app-net:
        driver: bridge

services:
    mysql:
        image: mysql:5.7
        container_name: ds-wordpress-6.1.1-mysql
        tty: true
        ports:
            - "4208:3306"
        volumes:
            - "./var/libclea/mysql/:/var/lib/mysql"
        environment:
            MYSQL_ROOT_PASSWORD: 1234
            MYSQL_DATABASE: wordpress
            MYSQL_USER: miusuario
            MYSQL_PASSWORD: mipassword
        networks:
            - ds-wordpress-6.1.1-net

    server:
        image: wordpress:latest
        container_name: ds-wordpress-6.1.1
        ports:
            - "4282:80"
        volumes:
            - "./var/www/html/:/var/www/html"
        environment:
            WORDPRESS_DB_USER: miusuario
            WORDPRESS_DB_PASSWORD: mipassword
            WORDPRESS_DB_NAME: wordpress
            WORDPRESS_DB_HOST: ds-wordpress-6.1.1-mysql
        depends_on:
            - mysql
        networks:
            - ds-wordpress-6.1.1-net

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: ds-phpmyadmin
        ports:
            - "4283:80"
        environment:
            PMA_HOST: ds-wordpress-6.1.1-mysql
            MYSQL_ROOT_PASSWORD: 1234
        depends_on:
            - mysql
        networks:
            - ds-wordpress-6.1.1-net

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
